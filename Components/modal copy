<Modal
            animationType={"slide"}
            transparent={false}
            visible={this.state.modalVisible}
            onRequestClose={() => {
              alert("Modal has been closed.");
            }}
          >
            <View style={modalstyle.container}>
              <View style={modalstyle.detailsContainer}>
                <TouchableOpacity
                  onPress={() => {
                    this.setModalVisible(!this.state.modalVisible);
                  }}
                >
                  <Ionicons
                    name="ios-arrow-down"
                    style={{ marginLeft: 300 }}
                    size={40}
                    color="white"
                  />
                </TouchableOpacity>
                <View style={modalstyle.align}>
                  <View style={modalstyle.imageCropper}>
                    <Image
                      resizeMode="contain"
                      style={modalstyle.image}
                      source={avatarSource()}
                    />
                  </View>
                  <Text style={modalstyle.groupName}>
                    {this.state.user} & {Math.floor(Math.random() * 10)} others
                  </Text>
                  <View style={styles.sender}></View>
                  <View
                    style={{
                      marginBottom: 30,
                      marginTop: 30,
                      alignItems: "center"
                    }}
                  >
                    <Text style={modalstyle.categoryname}>
                      {this.props.invite.category.toUpperCase()}
                    </Text>
                    <View style={modalstyle.location}>
                      <Ionicons
                        name="ios-clock"
                        style={{ marginRight: 15 }}
                        size={30}
                        color="grey"
                      />

                      <Text
                        style={modalstyle.headerInfo}
                      >{`${days[eventDay]} @ ${eventTime}`}</Text>
                    </View>

                    <TouchableOpacity style={modalstyle.location}>
                      <Ionicons
                        name="ios-pin"
                        style={{ marginRight: 20 }}
                        size={30}
                        color="grey"
                      />
                      <Text style={modalstyle.headerInfo}>
                        {this.props.invite.location}
                      </Text>
                    </TouchableOpacity>
                    <Text>
                      {this.state.result && JSON.stringify(this.state.result)}
                    </Text>
                    <Button
                      title="Get Directions"
                      onPress={this._handlePressButtonAsync}
                    />
                  </View>

                  <CButton text="Accept" onPress={this.handleAccept} />
                </View>
              </View>
              <TouchableOpacity
                style={{ marginTop: 150 }}
                onPress={() => {
                  this.setModalVisible(!this.state.modalVisible);
                }}
              >
                <Text
                  style={{ color: "white", fontWeight: "900", fontSize: 24 }}
                >
                  CLOSE
                </Text>
              </TouchableOpacity>
            </View>
          </Modal>